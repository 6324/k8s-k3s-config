apiVersion: v1
kind: Namespace
metadata:
  name: spring-cloud
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: spring-cloud
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      # initContainers:
      # Init containers are exactly like regular containers, except:
      # - Init containers always run to completion.
      # - Each init container must complete successfully before the next one starts.
      containers:
        - name: nginx
          image: daocloud.io/library/nginx:1.10
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 100Mi
          #存活状态检查 可以http （httpGet）也可以tcp（tcpSocket）
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          #pod启动状态检查
          readinessProbe:
            httpGet:
              path: /
              port: 80
            #首次探测延迟时间
            initialDelaySeconds: 20
            #超时时间
            timeoutSeconds: 5
            #健康阈值
            successThreshold: 1
            #不健康阈值
            failureThreshold: 3
            #探测频率
            periodSeconds: 10
          ports:
            - containerPort: 80
              name: nginx
          #容器内挂载点
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
            - name: htmlpath
              mountPath: /usr/share/nginx/html
      #容器外挂载点 name要和上面相同
      volumes:
        - name: localtime
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
        - name: htmlpath
          hostPath:
            path: /home/canary-demo/html
      restartPolicy: Always
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: spring-cloud-service
  namespace: spring-cloud
spec:
  selector:
    app: nginx
  type: NodePort
  ports:
    - name: myjob
      protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30008
---

